<div class="form-group" id="friends_select" style="display: none;">
  <%= f.label :user_ids, "Split with Friends" %>
  <%= f.collection_select :user_ids,
        current_user.friends.order(:email),
        :id,
        ->(u) { "#{u.first_name} #{u.last_name} (#{u.email})" },
        { selected: @selected_user_ids },
        { multiple: true, class: "form-multi-select" } %>

  <div class="form-group" id="percentage_inputs" style="display: none; margin-top: 20px;">
    <label>Percentage Split</label>
    <div id="percentage_fields" class="flex flex-col gap-2"></div>
    <p id="percentage_warning" style="color: #ff4d4f; font-size: 13px; display: none;">
      Total percentage must equal 100%.
    </p>
  </div>
</div>

<script>
document.addEventListener("turbo:load", () => {
  const percentageInputsContainer = document.getElementById("percentage_inputs");
  const percentageFields = document.getElementById("percentage_fields");
  const percentageWarning = document.getElementById("percentage_warning");
  const friendsSelect = document.getElementById("friends_select");
  const expenseForm = document.getElementById("expense_form");
  if (!expenseForm) return;

  const splitHidden = document.getElementById("split_type_field");
  const creatorId = expenseForm.dataset.currentUserId;
  const creatorName = expenseForm.dataset.currentUserName;
  const creatorEmail = expenseForm.dataset.currentUserEmail;
  const submitButton = document.querySelector('form input[type="submit"]');

  function renderPercentageFields() {
    let participants = Array.from(friendsSelect.querySelector("select").selectedOptions);

    if (!participants.some(p => p.value === creatorId)) {
      participants.unshift({
        value: creatorId,
        text: `${creatorName} (${creatorEmail})`
      });
    }

    if (participants.length === 0) {
      percentageInputsContainer.style.display = "none";
      percentageFields.innerHTML = "";
      return;
    }

    const defaultPercent = (100 / participants.length).toFixed(2);
    percentageFields.innerHTML = "";

    participants.forEach(p => {
      const wrapper = document.createElement("div");
      wrapper.classList.add("flex", "flex-col", "gap-1");

      const label = document.createElement("label");
      label.textContent = p.text || p.label;

      const input = document.createElement("input");
      input.type = "number";
      input.min = "0";
      input.max = "100";
      input.step = "0.01";
      input.value = defaultPercent;
      input.name = `expense[percentages][${p.value || p.id}]`;
      input.classList.add("form-input");

      wrapper.appendChild(label);
      wrapper.appendChild(input);
      percentageFields.appendChild(wrapper);
    });

    percentageInputsContainer.style.display = "block";
    validatePercentageTotal();
  }

  function validatePercentageTotal() {
    if (splitHidden.value !== "percentage") {
      submitButton.disabled = false;
      percentageWarning.style.display = "none";
      return;
    }

    const inputs = percentageFields.querySelectorAll("input");
    let total = 0;
    inputs.forEach(input => total += parseFloat(input.value) || 0);

    if (Math.abs(total - 100) > 0.01) {
      submitButton.disabled = true;
      percentageWarning.style.display = "block";
    } else {
      submitButton.disabled = false;
      percentageWarning.style.display = "none";
    }
  }

  friendsSelect.querySelector("select").addEventListener("change", () => {
    if (splitHidden.value === "percentage") renderPercentageFields();
  });

  percentageFields.addEventListener("input", validatePercentageTotal);

  if (splitHidden.value === "percentage") renderPercentageFields();
});
</script>